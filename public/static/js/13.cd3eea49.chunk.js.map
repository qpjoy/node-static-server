{"version":3,"sources":["components/pages/landing/Login.js","utils/unity.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","login","email","phone","password","passwordA","name","confirmClicked","a","b","confirmClickedUnity","window","userLogin","alert","emailRef","React","createRef","_this2","_this$state","react_default","createElement","className","src","action","type","placeholder","value","onChange","e","setState","target","id","required","htmlFor","pattern","ref","onClick","console","log","Component"],"mappings":"kKAKMA,cAEF,SAAAA,MAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,QACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,OAAAQ,KAAAH,KAAMJ,KAIVQ,MAAQ,CACJC,OAAO,EACPC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,KAAM,IAXSb,EA6CnBc,eAAiB,SAACC,EAAGC,ICpDlB,SAASC,sBACTC,OAAOC,YACNC,MAAM,wCACNF,OAAOC,UAAU,SAAU,IDkD3BF,IA5CAjB,EAAKqB,SAAWC,IAAMC,YAFPvB,sJAiDV,IAAAwB,EAAArB,KAAAsB,EASDtB,KAAKI,MANLC,EAHCiB,EAGDjB,MACAE,EAJCe,EAIDf,MACAD,EALCgB,EAKDhB,MACAE,EANCc,EAMDd,SACAC,EAPCa,EAODb,UACAC,EARCY,EAQDZ,KAEJ,OACIa,EAAAX,EAAAY,cAAA,WACID,EAAAX,EAAAY,cAAA,WACID,EAAAX,EAAAY,cAAA,OAAKC,UAAU,WACXF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,kBACXF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,4BACXF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,4BACXF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,+BACVC,IAAI,sEAEbH,EAAAX,EAAAY,cAAA,OAAKC,UAAU,4BACXF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,6BACVC,IAAI,wEAKrBH,EAAAX,EAAAY,cAAA,OAAKC,UAAU,gBACXF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,oBACVC,IAAI,iFACTH,EAAAX,EAAAY,cAAA,OAAKC,UAAU,qBACXF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,8BAAf,WAGAF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,6BAAf,YAMRF,EAAAX,EAAAY,cAAA,QAAMG,OAAO,KACTJ,EAAAX,EAAAY,cAAA,OAAKC,UAAU,sBAENpB,GACGkB,EAAAX,EAAAY,cAAA,OAAKC,UAAU,eACXF,EAAAX,EAAAY,cAAA,SAAOI,KAAK,OAAOH,UAAU,cAAcI,YAAY,uCAChDC,MAAOpB,EACPqB,SAAU,SAAAA,SAAAC,GAAC,OAAIX,EAAKY,SAAS,CAACvB,KAAMsB,EAAEE,OAAOJ,SAC7CK,GAAG,OAAOC,UAAQ,IACzBb,EAAAX,EAAAY,cAAA,SAAOa,QAAQ,OAAOZ,UAAU,eAAhC,yCAMZF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,eACXF,EAAAX,EAAAY,cAAA,SAAOI,KAAK,QAAQH,UAAU,cAAcI,YAAY,iCACjDS,QAAQ,+EACRR,MAAOxB,EACPyB,SAAU,SAAAA,SAAAC,GAAC,OAAIX,EAAKY,SAAS,CAAC3B,MAAO0B,EAAEE,OAAOJ,SAC9CS,IAAKvC,KAAKkB,SAGViB,GAAG,QAAQC,UAAQ,IAC1Bb,EAAAX,EAAAY,cAAA,SAAOa,QAAQ,QAAQZ,UAAU,eAAjC,oCAICpB,GACGkB,EAAAX,EAAAY,cAAA,OAAKC,UAAU,eACXF,EAAAX,EAAAY,cAAA,SAAOI,KAAK,OAAOH,UAAU,cAAcI,YAAY,iCAChDC,MAAOvB,EACPwB,SAAU,SAAAA,SAAAC,GAAC,OAAIX,EAAKY,SAAS,CAAC1B,MAAOyB,EAAEE,OAAOJ,SAC9CK,GAAG,QAAQC,UAAQ,IAC1Bb,EAAAX,EAAAY,cAAA,SAAOa,QAAQ,QAAQZ,UAAU,eAAjC,mCAMZF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,eACXF,EAAAX,EAAAY,cAAA,SAAOI,KAAK,WAAWH,UAAU,cAAcI,YAAY,iCACpDC,MAAOtB,EACPuB,SAAU,SAAAA,SAAAC,GAAC,OAAIX,EAAKY,SAAS,CAACzB,SAAUwB,EAAEE,OAAOJ,SACjDK,GAAG,WAAWC,UAAQ,IAC7Bb,EAAAX,EAAAY,cAAA,SAAOa,QAAQ,WAAWZ,UAAU,eAApC,oCAICpB,GACGkB,EAAAX,EAAAY,cAAA,OAAKC,UAAU,eACXF,EAAAX,EAAAY,cAAA,SAAOI,KAAK,WAAWH,UAAU,cAAcI,YAAY,6CACpDC,MAAOrB,EACPsB,SAAU,SAAAA,SAAAC,GAAC,OAAIX,EAAKY,SAAS,CAACxB,UAAWuB,EAAEE,OAAOJ,SAClDK,GAAG,YACHC,UAAQ,IACfb,EAAAX,EAAAY,cAAA,SAAOa,QAAQ,YAAYZ,UAAU,eAArC,+CAMZF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,eACXF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,oBACXF,EAAAX,EAAAY,cAAA,OAAKC,UAAU,mBACXF,EAAAX,EAAAY,cAAA,wDAEJD,EAAAX,EAAAY,cAAA,OAAKC,UAAU,oBACXF,EAAAX,EAAAY,cAAA,wCAKZD,EAAAX,EAAAY,cAAA,OAAKC,UAAU,+BACXF,EAAAX,EAAAY,cAAA,UAAQgB,QAAS,SAAAA,UAAA,OAAMnB,EAAKV,eAAe,UAAW,MAAtD,kBAEAY,EAAAX,EAAAY,cAAA,OAAKC,UAAU,uBACVe,QACI,SAAAA,QAACR,GAAD,OAAOS,QAAQC,IAAIV,KAExBT,EAAAX,EAAAY,cAAA,KAAGC,UAAU,iCACRpB,EAAQ,eAAO,iBAGxBkB,EAAAX,EAAAY,cAAA,OAAKC,UAAU,uBACVe,QAAS,SAAAA,UAAA,OAAMnB,EAAKY,SAAS,CAAC5B,OAAQA,MAEvCkB,EAAAX,EAAAY,cAAA,KAAGC,UAAU,eAELpB,EAAQ,2BAAS,8BAMjCkB,EAAAX,EAAAY,cAAA,OAAKC,UAAU,6BA1L3BkB,aAqMLhD","file":"static/js/13.cd3eea49.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Button} from 'antd';\r\nimport { confirmClickedUnity } from 'utils/unity';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.emailRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        login: true,\r\n        email: '',\r\n        phone: '',\r\n        password: '',\r\n        passwordA: '',\r\n        name: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    // _confirm = async data => {\r\n    //     const {token} = this.state.login ? data.login : data.signup\r\n    //     this._saveUserData(token)\r\n    //     this.props.history.push(`/`)\r\n    // }\r\n    //\r\n    // _saveUserData = token => {\r\n    //     localStorage.setItem(AUTH_TOKEN, token)\r\n    // }\r\n    //\r\n    // _checkEmail = debounce((e, mutation) => {\r\n    //     // if(!validateEmail(email)) {\r\n    //     //     console.log('mutation');\r\n    //     //     // return;\r\n    //     // }\r\n    //     // mutation();\r\n    //     console.log(e, mutation)\r\n    //\r\n    //     this.emailRef.current.setCustomValidity(\"This field cannot be left blank\");\r\n    //     console.log(this.emailRef.current);\r\n    //     mutation();\r\n    //     // {\r\n    //     //     const {\r\n    //     //         email\r\n    //     //     } = this.state;\r\n    //     // }\r\n    // }, 500)\r\n\r\n    confirmClicked = (a, b) => {\r\n        confirmClickedUnity();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            login,\r\n            phone,\r\n            email,\r\n            password,\r\n            passwordA,\r\n            name\r\n        } = this.state;\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div className=\"landing\">\r\n                        <div className=\"landing-header\">\r\n                            <div className=\"landing-header__operator\">\r\n                                <div className=\"landing-header__operator\">\r\n                                    <img className=\"landing-header__operator-min\"\r\n                                         src=\"http://www.wulihub.com.cn/go/Qxa7kJ/images/详情1/u21.png\"/>\r\n                                </div>\r\n                                <div className=\"landing-header__operator\">\r\n                                    <img className=\"landing-header__operator-x\"\r\n                                         src=\"http://www.wulihub.com.cn/go/Qxa7kJ/images/详情1/u20.png\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"landing-logo\">\r\n                            <img className=\"landing-logo_imgT\"\r\n                                 src=\"http://www.wulihub.com.cn/go/Qxa7kJ/images/账号登录/u464.svg\"/>\r\n                            <div className=\"landing-logo_name\">\r\n                                <div className=\"landing-logo_name--project\">\r\n                                    PROJECT\r\n                                </div>\r\n                                <div className=\"landing-logo_name--avatar\">\r\n                                    AVATAR\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <form action=\"#\">\r\n                            <div className=\"landing-form form\">\r\n                                {\r\n                                    !login && (\r\n                                        <div className=\"form__group\">\r\n                                            <input type=\"text\" className=\"form__input\" placeholder=\"请输入用户名\"\r\n                                                   value={name}\r\n                                                   onChange={e => this.setState({name: e.target.value})}\r\n                                                   id=\"name\" required/>\r\n                                            <label htmlFor=\"name\" className=\"form__label\">请输入用户名</label>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n\r\n\r\n                                <div className=\"form__group\">\r\n                                    <input type=\"email\" className=\"form__input\" placeholder=\"请输入邮箱\"\r\n                                           pattern=\"/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\"\r\n                                           value={email}\r\n                                           onChange={e => this.setState({email: e.target.value})}\r\n                                           ref={this.emailRef}\r\n                                        // oninvalid=\"this.setCustomValidity('Enter User Name Here')\"\r\n                                        // oninput=\"this.setCustomValidity('')\"\r\n                                           id=\"email\" required/>\r\n                                    <label htmlFor=\"email\" className=\"form__label\">请输入邮箱</label>\r\n                                </div>\r\n\r\n                                {\r\n                                    !login && (\r\n                                        <div className=\"form__group\">\r\n                                            <input type=\"text\" className=\"form__input\" placeholder=\"请输入手机\"\r\n                                                   value={phone}\r\n                                                   onChange={e => this.setState({phone: e.target.value})}\r\n                                                   id=\"phone\" required/>\r\n                                            <label htmlFor=\"phone\" className=\"form__label\">请输入手机</label>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n\r\n\r\n                                <div className=\"form__group\">\r\n                                    <input type=\"password\" className=\"form__input\" placeholder=\"请输入密码\"\r\n                                           value={password}\r\n                                           onChange={e => this.setState({password: e.target.value})}\r\n                                           id=\"password\" required/>\r\n                                    <label htmlFor=\"password\" className=\"form__label\">请输入密码</label>\r\n                                </div>\r\n\r\n                                {\r\n                                    !login && (\r\n                                        <div className=\"form__group\">\r\n                                            <input type=\"password\" className=\"form__input\" placeholder=\"请再次输入密码\"\r\n                                                   value={passwordA}\r\n                                                   onChange={e => this.setState({passwordA: e.target.value})}\r\n                                                   id=\"passwordA\"\r\n                                                   required/>\r\n                                            <label htmlFor=\"passwordA\" className=\"form__label\">请再次输入密码</label>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n\r\n\r\n                                <div className=\"form__group\">\r\n                                    <div className=\"form__text-group\">\r\n                                        <div className=\"form__sms-login\">\r\n                                            <a>短信验证码登录</a>\r\n                                        </div>\r\n                                        <div className=\"form__forget-pwd\">\r\n                                            <a>忘记密码</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form__group form__btn-group\">\r\n                                    <button onClick={() => this.confirmClicked('button3', 13)}>Confirm Things</button>\r\n\r\n                                    <div className=\"form__btn-group_item\"\r\n                                         onClick={\r\n                                             (e) => console.log(e)\r\n                                         }>\r\n                                        <a className=\"btn-primary btn-primary--blue\">\r\n                                            {login ? '登录' : '注册'}\r\n                                        </a>\r\n                                    </div>\r\n                                    <div className=\"form__btn-group_item\"\r\n                                         onClick={() => this.setState({login: !login})}\r\n                                    >\r\n                                        <a className=\"btn-primary\">\r\n                                            {\r\n                                                login ? '前去注册' : '已有账号'\r\n                                            }\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"dividing\"></div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login\r\n","export function confirmClickedUnity() {\r\n    if(window.userLogin) {\r\n        alert('Welcome to Avatar! Click to confirm.')\r\n        window.userLogin('123123', 0);\r\n    }\r\n}"],"sourceRoot":""}